Vertex v0 = new Vertex("v0");
		Vertex v1 = new Vertex("v1");
		Vertex v2 = new Vertex("v2");
		Vertex v3 = new Vertex("v3");
		Vertex v4 = new Vertex("v4");
		
		v0.setAdjacencies(new Edge[]{
							new Edge(v1, 16), 
							new Edge(v3, 2),
							new Edge(v4, 3)});
		
		v1.setAdjacencies(new Edge[]{
							new Edge(v2, 5)});
		
		v2.setAdjacencies(new Edge[]{
							new Edge(v1, 3)});
		
		v3.setAdjacencies(new Edge[]{
							new Edge(v1, 12),
							new Edge(v4, 7)});
		
		v4.setAdjacencies(new Edge[]{
							new Edge(v1, 10),
							new Edge(v2, 4),
							new Edge(v3, 5)});
		
		Vertex[] vertices = {v0, v1, v2, v3, v4};	
		
		breadthFirst(vertices);
		System.out.println();
		depthFirst(vertices);
		
		System.out.println("\n\nShortest Paths:");
		shortestPath(v0);
		
		for(Vertex v : vertices)
		{
			System.out.println("Distance from "+v0.getName()+" to "+v+": "+v.getDistance());
			
			List<Vertex> path = getShortestPathTo(v);
			System.out.println("Path: "+path);
			System.out.println();
		}//	end forloop