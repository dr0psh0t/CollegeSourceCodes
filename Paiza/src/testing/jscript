process.stdin.resume();
process.stdin.setEncoding('utf8');
process.stdin.on('data', function (chunk) {
    var input = chunk.toString().split("\n");
    var numCells = parseInt(input[0]);
    var cells = input[1].split(" ").map(function(n){
        return parseInt(n);
    });
    var numGames = parseInt(input[2]);
    var wheelValues = [];
    for (var i = 3; i < 3 + numGames; i++) {
        var value = parseInt(input[i]);
        if (!isNaN(value)) {
            wheelValues.push(value);
        }
    }

    var targetCell = numCells - 1;
    wheelValues.forEach(function(initialMove){
        var visitedCellIndexes = {};
        var currentIndex = 0;
        var currentMove = initialMove;
        var inLoop = true;

        while (! (currentIndex in visitedCellIndexes)) {
            visitedCellIndexes[currentIndex] = true;
            currentIndex += currentMove;
            currentMove = cells[currentIndex];

            if (currentIndex > targetCell) {
                console.log("No");
                inLoop = false;
                break;
            } else if (currentIndex === targetCell) {
                console.log("Yes");
                inLoop = false;
                break;
            }
        }

        if (inLoop) {
            console.log("No");
        }
    });
});